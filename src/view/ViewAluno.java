package view;

import controller.AlunoController;
import controller.ClasseController;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.AlunoModel;
import model.ClasseModel;
import controller.LoginController;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 *
 * @author José Orlando
 */
public class ViewAluno extends javax.swing.JFrame {

    String boasVindas = "ALUNOS - "
            + ViewLogin.usuSelecionado.getNome()
            + " - Modo: "
            + ViewLogin.usuSelecionado.getCargo();

    AlunoModel alunoModel = new AlunoModel();
    AlunoController alunoController = new AlunoController();
    ClasseModel classeModel = new ClasseModel();
    ClasseController classeController = new ClasseController();
    List<ClasseModel> listaClasses = classeController.getListaClassesController();
    LoginController loginController = new LoginController();
    String cadAlt = "cad";

    /**
     * Creates new form ViewAluno
     */
    public ViewAluno() {
        initComponents();
        setLocationRelativeTo(null);
        carregarTabela();

        jsAno.setValue(1);
        jcbTurma.setModel(new javax.swing.DefaultComboBoxModel<>(listarTurma(filtrarClasses(listaClasses))));
        
        InputMap inputMap = this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "forward");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("forward", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                jbSalvarActionPerformed(arg0);
            }

        });
    }

    private List<ClasseModel> filtrarClasses(List<ClasseModel> listaClasses) {
        List<ClasseModel> classesFiltradas = new ArrayList<>();
        int ano = (int) jsAno.getValue();

        for (int i = 0; i < listaClasses.size(); i++) {
            if (ano == listaClasses.get(i).getAno()) {
                classesFiltradas.add(listaClasses.get(i));
            }
        }
        return classesFiltradas;

    }

    private String[] listarTurma(List<ClasseModel> listaTurmas) {
        String[] turmas = new String[listaTurmas.size()];
        for (int i = 0; i < listaTurmas.size(); i++) {
            turmas[i] = String.valueOf(listaTurmas.get(i).getTurma());
        }
        return turmas;
    }

    private void limparFormularios() {
        jtfId.setText("");
        jtfNome.setText("");
        jtfLogin.setText("");
        jpfSenha.setText("");
    }

    private void carregarTabela() {
        List<AlunoModel> listaAluno;
        listaAluno = alunoController.getListaAlunosController();

        DefaultTableModel tabela = (DefaultTableModel) jTabela.getModel();
        tabela.setNumRows(0);

        for (int i = 0; i < listaAluno.size(); i++) {
            tabela.addRow(new Object[]{
                listaAluno.get(i).getId(),
                listaAluno.get(i).getNome(),
                listaAluno.get(i).getAno(),
                listaAluno.get(i).getTurma(),
                listaAluno.get(i).getLogin()
            });
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabela = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtfId = new javax.swing.JTextField();
        jtfNome = new javax.swing.JTextField();
        jtfLogin = new javax.swing.JTextField();
        jcbTurma = new javax.swing.JComboBox<>();
        jpfSenha = new javax.swing.JPasswordField();
        jbSalvar = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jbVoltar = new javax.swing.JButton();
        jsAno = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(boasVindas);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(740, 580));

        jTabela.setAutoCreateRowSorter(true);
        jTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nome", "Ano", "Turma", "Login"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTabela);
        if (jTabela.getColumnModel().getColumnCount() > 0) {
            jTabela.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTabela.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTabela.getColumnModel().getColumn(2).setPreferredWidth(25);
            jTabela.getColumnModel().getColumn(3).setPreferredWidth(25);
        }

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Id");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Nome");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Ano");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Turma");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Login");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("Senha");

        jtfId.setEditable(false);

        jtfLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfLoginActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-mais-30.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-exchange-money-30.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-cancelar-30.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbLimpar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-apagar-30.png"))); // NOI18N
        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbVoltar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-mova-à-esquerda-30.png"))); // NOI18N
        jbVoltar.setText("Voltar");
        jbVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVoltarActionPerformed(evt);
            }
        });

        jsAno.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));
        jsAno.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsAnoStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(35, 35, 35)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jsAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbExcluir)
                    .addComponent(jbLimpar)
                    .addComponent(jbVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbAlterar, jbExcluir, jbLimpar, jbSalvar, jbVoltar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalvar)
                    .addComponent(jsAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbLimpar)
                        .addGap(216, 216, 216)
                        .addComponent(jbVoltar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfLoginActionPerformed

    private void jbVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVoltarActionPerformed
        new ViewPrincipal().setVisible(true);
        this.dispose();       
    }//GEN-LAST:event_jbVoltarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        int linha = jTabela.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(this, "Selecione um aluno para apagar.");
        
        } else {
            if (JOptionPane.showConfirmDialog(this, "Deseja excluir o aluno selecionado?", "ATENÇÃO!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {
                int codigo = (int) jTabela.getValueAt(linha, 0);
                
                if (alunoController.excluirAlunoController(codigo)) {
                    carregarTabela();
                    JOptionPane.showMessageDialog(this, "Aluno excluído com sucesso.");
                
                } else {
                    JOptionPane.showMessageDialog(this, "Falha ao excluir.\nAluno relacionado a outro registro no sistema.", "Erro",  JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        limparFormularios();
        cadAlt = "cad";
        jbExcluir.setEnabled(true);
        jTabela.setEnabled(true);
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jsAnoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsAnoStateChanged
        jcbTurma.setModel(new javax.swing.DefaultComboBoxModel<>(listarTurma(filtrarClasses(listaClasses))));
    }//GEN-LAST:event_jsAnoStateChanged

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        boolean salva = true;

        alunoModel = new AlunoModel();
        alunoModel.setNome(jtfNome.getText());
        alunoModel.setLogin(jtfLogin.getText());
        alunoModel.setSenha(String.valueOf(jpfSenha.getPassword()));

        for (int i = 0; i < listaClasses.size(); i++) {
            if ((int) jsAno.getValue() == listaClasses.get(i).getAno()
                    && jcbTurma.getSelectedItem().toString().equals(String.valueOf(listaClasses.get(i).getTurma()))) {
                alunoModel.setClasseId(listaClasses.get(i).getId());
            }
        }

        List<String> listaLogins = loginController.listaLoginsController();
        for (String login : listaLogins) {
            if (alunoModel.getLogin().equalsIgnoreCase(login) && cadAlt.equals("cad")) {
                salva = false;
            
            } else if (cadAlt.equals("alt")) {
                if (!jTabela.getValueAt(jTabela.getSelectedRow(), 4).toString().equalsIgnoreCase(alunoModel.getLogin()) && alunoModel.getLogin().equalsIgnoreCase(login)) {
                    salva = false;
                }
            }
        }
        if (!salva) {
            JOptionPane.showMessageDialog(this, "Login já utilizado.\nCadastro não efetuado.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        if (jtfNome.getText().equals("")
                || jtfLogin.getText().equals("")
                || jpfSenha.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos para efetuar o cadastro.", "Erro", JOptionPane.ERROR_MESSAGE);
            salva = false;
        }

        if (salva) {
            if (cadAlt.equals("cad")) {
                String msgRetorno = alunoController.salvarAlunoController(alunoModel);
                if (msgRetorno.equals("")) {
                    JOptionPane.showMessageDialog(this, "Cadastrado com sucesso.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    carregarTabela();
                    limparFormularios();
                } else {
                    JOptionPane.showMessageDialog(this, msgRetorno + "\nCadastro não efetuado.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            
            } else {
                alunoModel.setId(Integer.parseInt(jtfId.getText()));
                String msgRetorno = alunoController.atualizarAlunoController(alunoModel);

                if (msgRetorno.equals("")) {
                    JOptionPane.showMessageDialog(this, "Alterado com sucesso.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    carregarTabela();
                    cadAlt = "cad";
                    jbExcluir.setEnabled(true);
                    jTabela.setEnabled(true);
                    limparFormularios();
                } else {
                    JOptionPane.showMessageDialog(this, msgRetorno + "\nAlteração não efetuada.", "Erro", JOptionPane.ERROR_MESSAGE);
                }

            }
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        cadAlt = "alt";
        int linha = jTabela.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(this, "Selecione um aluno para alterar.");
        } else {
            jtfId.setText(jTabela.getValueAt(linha, 0).toString());
            jtfNome.setText(jTabela.getValueAt(linha, 1).toString());
            jsAno.setValue(jTabela.getValueAt(linha, 2));
            jcbTurma.setSelectedItem(jTabela.getValueAt(linha, 3).toString());
            jtfLogin.setText(jTabela.getValueAt(linha, 4).toString());

            List<AlunoModel> listaAluno;
            listaAluno = alunoController.getListaAlunosController();
            for (int i = 0; i < listaAluno.size(); i++) {
                if ((int) jTabela.getValueAt(linha, 0) == listaAluno.get(i).getId()) {
                    jpfSenha.setText(listaAluno.get(i).getSenha());
                }
            }
            jbExcluir.setEnabled(false);
            jTabela.setEnabled(false);
        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewAluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabela;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JButton jbVoltar;
    private javax.swing.JComboBox<String> jcbTurma;
    private javax.swing.JPasswordField jpfSenha;
    private javax.swing.JSpinner jsAno;
    private javax.swing.JTextField jtfId;
    private javax.swing.JTextField jtfLogin;
    private javax.swing.JTextField jtfNome;
    // End of variables declaration//GEN-END:variables
}
